# set_.py

# set 자료형은 딕셔너리와 같은 기호를 사용 {}
# 순서가 없음
# 중복 X
# 위 2가지 특징을 가지고 있음

# a = set("Hello")
# print(a)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# 문제가 어떤 리스트의 중복된 값을 없앤 합을 구해야 하는 경우

# test = [1, 1, 2, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7]
# a = set(test)           # set 자료형을 이용하여 중복된 값 제거
# re_test = list(a)       # 중복된 값이 제거된 set 자료형을 list로 변환

# print(sum(re_test))


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# set 자료형의 연산

# s1 = set([1, 2, 3, 4, 5, 6])
# s2 = set([4, 5, 6, 7, 8, 9])

# s3 = s1 & s2                    # 연산자를 이용한 교집합
# s4 = s1.intersection(s2)        # 함수를 이용한 교집합
# print(s3)
# print(s4)

# s5 = s1 | s2                    # 연산자를 이용한 합집합
# s6 = s1.union(s2)               # 함수를 이용한 합집합
# print(s5)
# print(s6)

# s7 = s1 - s2                    # 연산자를 이용한 차집합
# s8 = s1.difference(s2)          # 함수를 이용한 차집합
# print(s7)
# print(s8)


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #


# s = {1, 2, 3}
# print(s)
# print()

# 함수
# add(값)
# 값을 한개 추가
# s.add(4)
# print(s)
# print()

# update([값1, 값2])
# 값을 여러개 추가
# s.update([5, 6])
# print(s)
# print()

# remove(값)
# 값을 제거
# s.remove(6)
# print(s)